// Code generated by protoc-gen-go.
// source: directive.proto
// DO NOT EDIT!

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	directive.proto

It has these top-level messages:
	Directive
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Directive_Cmd int32

const (
	Directive_REGISTER      Directive_Cmd = 0
	Directive_START_TASK    Directive_Cmd = 1
	Directive_STOP_TASK     Directive_Cmd = 2
	Directive_EXECUTE_SHELL Directive_Cmd = 3
	Directive_LOG           Directive_Cmd = 4
)

var Directive_Cmd_name = map[int32]string{
	0: "REGISTER",
	1: "START_TASK",
	2: "STOP_TASK",
	3: "EXECUTE_SHELL",
	4: "LOG",
}
var Directive_Cmd_value = map[string]int32{
	"REGISTER":      0,
	"START_TASK":    1,
	"STOP_TASK":     2,
	"EXECUTE_SHELL": 3,
	"LOG":           4,
}

func (x Directive_Cmd) String() string {
	return proto.EnumName(Directive_Cmd_name, int32(x))
}
func (Directive_Cmd) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Directive struct {
	Cmd     Directive_Cmd `protobuf:"varint,1,opt,name=cmd,enum=protocol.Directive_Cmd" json:"cmd,omitempty"`
	Payload string        `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
}

func (m *Directive) Reset()                    { *m = Directive{} }
func (m *Directive) String() string            { return proto.CompactTextString(m) }
func (*Directive) ProtoMessage()               {}
func (*Directive) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Directive) GetCmd() Directive_Cmd {
	if m != nil {
		return m.Cmd
	}
	return Directive_REGISTER
}

func (m *Directive) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func init() {
	proto.RegisterType((*Directive)(nil), "protocol.Directive")
	proto.RegisterEnum("protocol.Directive_Cmd", Directive_Cmd_name, Directive_Cmd_value)
}

func init() { proto.RegisterFile("directive.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xc9, 0x2c, 0x4a,
	0x4d, 0x2e, 0xc9, 0x2c, 0x4b, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0xc9,
	0xf9, 0x39, 0x4a, 0x0b, 0x18, 0xb9, 0x38, 0x5d, 0x60, 0xb2, 0x42, 0x9a, 0x5c, 0xcc, 0xc9, 0xb9,
	0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x7c, 0x46, 0xe2, 0x7a, 0x30, 0x55, 0x7a, 0x70, 0x15, 0x7a,
	0xce, 0xb9, 0x29, 0x41, 0x20, 0x35, 0x42, 0x12, 0x5c, 0xec, 0x05, 0x89, 0x95, 0x39, 0xf9, 0x89,
	0x29, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30, 0xae, 0x92, 0x1f, 0x17, 0xb3, 0x73, 0x6e,
	0x8a, 0x10, 0x0f, 0x17, 0x47, 0x90, 0xab, 0xbb, 0x67, 0x70, 0x88, 0x6b, 0x90, 0x00, 0x83, 0x10,
	0x1f, 0x17, 0x57, 0x70, 0x88, 0x63, 0x50, 0x48, 0x7c, 0x88, 0x63, 0xb0, 0xb7, 0x00, 0xa3, 0x10,
	0x2f, 0x17, 0x67, 0x70, 0x88, 0x7f, 0x00, 0x84, 0xcb, 0x24, 0x24, 0xc8, 0xc5, 0xeb, 0x1a, 0xe1,
	0xea, 0x1c, 0x1a, 0xe2, 0x1a, 0x1f, 0xec, 0xe1, 0xea, 0xe3, 0x23, 0xc0, 0x2c, 0xc4, 0xce, 0xc5,
	0xec, 0xe3, 0xef, 0x2e, 0xc0, 0x92, 0xc4, 0x06, 0x76, 0x86, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff,
	0x4e, 0x23, 0x64, 0x38, 0xc6, 0x00, 0x00, 0x00,
}
